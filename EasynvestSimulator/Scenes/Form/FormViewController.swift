//
//  FormViewController.swift
//  EasynvestSimulator
//
//  Created by João Gabriel on 14/12/18.
//  Copyright (c) 2018 João Gabriel de Britto e Silva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FormDisplayLogic: class {
    func displaySimulation(viewModel: Form.ViewModel)
    func displayErrorAlert(with message: String)
}

class FormViewController: UIViewController, FormDisplayLogic {
    
    //@IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var investedAmountTextField: UITextField!
    @IBOutlet weak var maturityDateTextField: UITextField!
    @IBOutlet weak var rateTextField: UITextField!
    
    var interactor: FormBusinessLogic?
    var router: (NSObjectProtocol & FormRoutingLogic & FormDataPassing)?

    // MARK: Setup
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = FormInteractor()
        let presenter = FormPresenter()
        let router = FormRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        hideKeyboardWhenTapScreen()
        liftViewWithKeyboard(self)
    }

    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        removeObserversWhenViewWillDisappear(self)
    }

    @IBAction func simulate(_ sender: Any) {
        let investedAmount = investedAmountTextField.text
        let maturityDate = maturityDateTextField.text
        let rate = rateTextField.text
        
        let request = Form.Request(investedAmount: investedAmount, rate: rate, maturityDate: maturityDate)
        interactor?.simulateInvestment(with: request)
    }
    
    @IBAction func unwindToFormVC(segue: UIStoryboardSegue) { }
    
    func displaySimulation(viewModel: Form.ViewModel) {
        //TODO: - FAZER O ROTEAMENTO COM A ROUTER PARA A PROXIMA TELA
        self.router?.routeToSimulationResult(segue: nil)
    }
    
    func displayErrorAlert(with message: String) {
        DispatchQueue.main.async {
            let alertController = UIAlertController(title: "Ops...", message: message, preferredStyle: .alert)
            
            let ok = UIAlertAction(title: "Ok", style: .default, handler: nil)
            alertController.addAction(ok)
            self.present(alertController, animated: true)
        }
    }

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
}
